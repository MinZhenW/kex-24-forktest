name: Dispatch

on:
  issues:
    types: 
      - opened

jobs:
  parse-issue-title:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.parse-title.outputs.result }}
    steps:
      - name: Parse issue title
        id: parse-title
        uses: actions/github-script@v6
        with:
          env: 
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = "${{ github.event.issue.number }}";
            const issueTitle = "${{ github.event.issue.title }}".toLowerCase();
            return issueTitle;
          result-encoding: string

  dispatch-to-handler:
    needs: [parse-issue-title]
    runs-on: ubuntu-latest
    if: needs.parse-issue-title.outputs.result != 'none'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/workflows/requirements.txt

      - name: Create repository
        uses: actions/github-script@v6
        run: |
          json=github.rest.repos.createForAuthenticatedUser({
            name: 'test-repo'
          }); 
          html = json.html_url
          echo "title=boll" = >> "$GITHUB.ENV"
          echo "html" >> "$GITHUB_ENV"

      # - name: Run handler
      #   continue-on-error: true
      #   run: |
      #     title="${{ needs.parse-issue-title.outputs.result }}"
      #     theme="${{ needs.parse-issue-title.outputs.result }}"
      #     EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
      #     echo "title=ðŸ¤– Here is a bonus exercise for you!" >> "$GITHUB_ENV"
      #     echo "body<<$EOF" >> "$GITHUB_ENV"
      #     python .github/workflows/handle_more.py ${{ secrets.OPENAI_TOKEN }} theme README.md >> "$GITHUB_ENV"
      #     echo "$EOF" >> "$GITHUB_ENV"
      #     fi

      - name: Update issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
              github.rest.issues.update({
                issue_number: "${{ github.event.issue.number }}",
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: "${{ env.title }}",
                body: "A repository with ${{ env.theme }} as a theme has been created for you here ${{ env.html }}!",
              });
                
      